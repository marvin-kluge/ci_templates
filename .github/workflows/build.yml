name: Build Python Package

on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        required: true
        type: string
        default: "3.10"
      USE_UV:
        required: false
        type: boolean
        default: false
      INSTALL_REQUIREMENTS:
        required: false
        type: boolean
        default: true
      EXTRA_REQUIREMENTS:
        required: false
        type: string
        default: ""
      PYTHON_PACKAGE_NAME:
        required: false
        type: string
        default: ""

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}

      - name: Upgrade Pip
        run: pip install --upgrade pip

      - name: Install UV or Pip
        id: install-method
        run: |
          if [[ "${{ inputs.USE_UV }}" == "true" ]]; then
            echo "Installing and setting up uv"
            pip install uv
            echo "install-cmd=uv pip install --system" >> $GITHUB_OUTPUT
          else
            echo "Using standard pip"
            echo "install-cmd=pip install" >> $GITHUB_OUTPUT
          fi

      - name: Install Requirements
        if: inputs.INSTALL_REQUIREMENTS == true && hashFiles('requirements.txt') != ''
        run: |
          ${{ steps.install-method.outputs.install-cmd }} -r requirements.txt

      - name: Install Project
        if: hashFiles('setup.py', 'pyproject.toml') != ''
        run: |
          ${{ steps.install-method.outputs.install-cmd }} -e .${{ inputs.EXTRA_REQUIREMENTS }}
      - name: Install build and anybadge
        run: |
          pip install --upgrade build anybadge
      - name: Build Package
        run: python -m build
      - name: Install Built Package
        run: |
          FILE_NAME=$(ls dist/*.tar.gz)
          pip install "$FILE_NAME"
      - name: Create build directory
        run: mkdir -p ${{ github.ref_name }}/build
      - name: Generate Badge
        run: anybadge --value="passing" --file=${{ github.ref_name }}/build/build.svg --label build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ${{ github.ref_name }}/build
          retention-days: 1
